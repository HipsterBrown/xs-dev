import { filesystem, print, system } from 'gluegun'
import {
  INSTALL_DIR,
  INSTALL_PATH,
  EXPORTS_FILE_PATH,
  MODDABLE_REPO,
  getProfilePath,
} from './constants'
import upsert from '../patching/upsert'
import { execWithSudo } from '../system/exec'

export default async function (): Promise<void> {
  print.info('Setting up Linux tools!')

  const BIN_PATH = filesystem.resolve(
    INSTALL_PATH,
    'build',
    'bin',
    'lin',
    'release'
  )
  const BUILD_DIR = filesystem.resolve(
    INSTALL_PATH,
    'build',
    'makefiles',
    'lin'
  )
  const PROFILE_PATH = getProfilePath()

  const spinner = print.spin()
  spinner.start('Beginning setup...')

  // 0. clone moddable repo into ./local/share directory if it does not exist yet
  filesystem.dir(INSTALL_DIR)

  if (filesystem.exists(EXPORTS_FILE_PATH) === false) {
    filesystem.file(EXPORTS_FILE_PATH, {
      content: `# Generated by xs-dev CLI\n`,
    })
  }

  // 1. Install or update the packages required to compile:
  spinner.start('Installing dependencies...')
  await execWithSudo(
    'apt-get install --yes gcc git wget make libncurses-dev flex bison gperf',
    { stdout: process.stdout }
  )
  spinner.succeed()

  // 2. Install the development version of the GTK+ 3 library
  spinner.start('Installing GTK+ 3...')
  await execWithSudo('apt-get --yes install libgtk-3-dev', {
    stdout: process.stdout,
  })
  spinner.succeed()

  // 3. Download the Moddable repository, or use the git command line tool as follows:
  if (filesystem.exists(INSTALL_PATH) !== false) {
    spinner.info('Moddable repo already installed')
  } else {
    spinner.start('Cloning Moddable-OpenSource/moddable repo')
    await system.spawn(`git clone ${MODDABLE_REPO} ${INSTALL_PATH}`)
    spinner.succeed()
  }

  // 4. Setup the MODDABLE environment variable
  process.env.MODDABLE = INSTALL_PATH
  process.env.PATH = `${String(process.env.PATH)}:${BIN_PATH}`

  await upsert(PROFILE_PATH, `source ${EXPORTS_FILE_PATH}`)

  await upsert(EXPORTS_FILE_PATH, `export MODDABLE=${process.env.MODDABLE}`)
  await upsert(EXPORTS_FILE_PATH, `export PATH="${BIN_PATH}:$PATH"`)

  // 5. Build the Moddable command line tools, simulator, and debugger from the command line:
  spinner.start('Building platform tooling')
  await system.exec('make', { cwd: BUILD_DIR, stdout: process.stdout })
  spinner.succeed()

  // 6. Install the desktop simulator and xsbug debugger applications
  spinner.start('Installing simulator')
  await execWithSudo('make install', {
    cwd: BUILD_DIR,
    stdout: process.stdout,
  })
  spinner.succeed()

  // 7. Profit?
  print.success(
    'Moddable SDK successfully set up! Start a new terminal session and run the "helloworld example": xs-dev run --example helloworld'
  )
}
