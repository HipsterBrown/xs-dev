[{"content":"\n# **Welcome to xs-dev!**\n\nCLI for automating the setup and usage of [Moddable XS tools](https://github.com/Moddable-OpenSource/moddable/blob/public/documentation/Moddable%20SDK%20-%20Getting%20Started.md)\n\nThe Moddable SDK and associated dev board tooling is incredibly empowering for embedded JS hardware development, however the set up process can be tedious to follow when getting started. This project aims to streamline the installation and environment configuration requirements across platforms in just a few commands.\n\n**This project is a work in progress and should be considered pre-1.0.**\n\n**Features:**\n\n- [X] [Moddable SDK setup](./features/setup)\n- [X] [SDK updates](./features/update)\n- [X] [Teardown](./features/teardown)\n- [X] [Device discovery](./features/scan)\n- [X] [Project creation](./features/init)\n- [X] [Run a project or example](./features/run)\n- [X] [SDK module management](./features/include)\n- [ ] Third-party dependency management ([coming soon](https://github.com/HipsterBrown/xs-dev/issues/49))\n\n**Platform support:**\n\n- [X] Mac\n- [ ] Windows ([coming soon](https://github.com/HipsterBrown/xs-dev/pull/44))\n- [X] Linux\n\n## Requirements\n\n[Node.js >= v12](https://nodejs.org/en/)\n\n**On Linux:**\n\nSetup commands rely on [`ssh-askpass`](https://packages.ubuntu.com/bionic/ssh-askpass) to prompt for permission when installing other tools and dependencies.\n\n## Installation\n\nInstall the package globally from `npm`:\n\n```\nnpm install -g xs-dev\n```\n\n```\npnpm install -g xs-dev\n```\n\n```\nyarn global add xs-dev\n```\n\n## Update to latest release\n\n```\nnpm update -g xs-dev\n```\n\n```\npnpm update -g xs-dev\n```\n\n```\nyarn global upgrade xs-dev\n```\n","url":"/xs-dev/en/introduction","title":"Introduction","description":"xs-dev intro","layout":"../../layouts/MainLayout.astro"},{"content":"\n# Manage modules from Moddable\n\nThe Moddable SdK ships with many first-party modules to support various features, peripherals, sensors, etc. The `include` command will update the project `manifest.json` with the selected module:\n\n```\nxs-dev include network/wifi\n```\n\nOr select from available modules:\n\n```\nxs-dev include\nxs-dev include files\n```\n\n## Select a device\n\nWhen the `--device` flag is present, the module is added to the `platforms` section of the `manifest.json` for the specified device. When `device` is not provided, the module is added to the global manifest section to be used for all devices. For example, the following adds the module for use on `esp32` devices only:\n\n```\nxs-dev include files/flash --device esp32\n```\n\n## Remove a module\n\nUpdates the `manifest.json` to remove the module.\n\n```\nxs-dev remove network/wifi\n```\n\nOr remove all modules that contain a string. This removes all modules that contain `\"wifi\"`.\n\n```\nxs-dev remove wifi\n```\n\nThe `--device` flag works for the `remove` command as well:\n\n```\nxs-dev remove network/mqtt --device esp32\n```\n","url":"/xs-dev/en/features/include","title":"Include","description":"Manage modules from Moddable SDK","layout":"../../../layouts/MainLayout.astro"},{"content":"\n# Scaffold new Moddable projects\n\nThe default template creates a `main.js` and minimally configured `manifest.json` for running in the simulator.\n\n```\nxs-dev init my-project\n```\n\n## TypeScript\n\nThe `--typescript` flag will create a project with Moddable types and a `main.ts` to get started:\n\n```\nxs-dev init my-typed-project --typescript\n```\n\n## IO (ECMA 419)\n\nThe `--io` flag sets up the project to use the [TC53 IO manifest](https://github.com/Moddable-OpenSource/moddable/blob/public/documentation/io/io.md) in the generated `mainfest.json`:\n\n```\nxs-dev init my-io-project --io\n```\n\n## Moddable example\n\nFor the `--example` flag, it can be used as a boolean to select a project from the list of available [Moddable examples](https://github.com/Moddable-OpenSource/moddable/tree/public/examples):\n\n```\nxs-dev init my-example-project --example\n```\n\nOr select from a filtered list of projects:\n\n```\nxs-dev init my-http-project --example http\n```\n\nOr if the complete example name is passed, it will be selected by default:\n\n```\nxs-dev init my-mqtt-project --example network/mqtt/mqttbasic\n```\n\n## Overwrite\n\nAn existing directory matching the project name can be overwritten with the `--overwrite` flag:\n\n```\nxs-dev init my-existing-project --overwrite\n```\n","url":"/xs-dev/en/features/init","title":"Init","description":"Scaffold new Moddable projects","layout":"../../../layouts/MainLayout.astro"},{"content":"\n# Run Moddable projects\n\nWithin a project directory, the `run` command will invoke [`mcconfig`](https://github.com/Moddable-OpenSource/moddable/blob/public/documentation/tools/tools.md#mcconfig) to generate the `make` file based on the `manifest.json` followed by building and running the project in the current environment simulator:\n\n```\nxs-dev run\n```\n\nWhen not in the project directory, a path can be passed to `run`:\n\n```\nxs-dev run path/to/project\n```\n\n## Moddable examples\n\nUse the `--example` flag to run a project included with the Moddable SDK:\n\n```\nxs-dev run --example helloworld\n```\n\nThe `--list-examples` provides a searchable list of available example projects:\n\n```\nxs-dev run --list-examples\n```\n\n## Select a device target\n\nThe `--device` flag allows for selecting a supported [device or simulator target](https://github.com/Moddable-OpenSource/moddable/blob/public/documentation/tools/tools.md#arguments):\n\n```\nxs-dev run --device esp32\n```\n\nTo dynamically select the device, use the `--list-devices` flag:\n\n```\nxs-dev run --list-devices\n```\n\nThis can be used in tandem with the `--example` or `--list-examples` flags to run an example project on a connected device:\n\n```\nxs-dev run --list-devices --list-examples\n```\n\n## Select a port address\n\nThe `--port` flag accepts a path to port for connected device (defaults to: `UPLOAD_PORT` environment variable):\n\n```\nxs-dev run --port /dev/cu.usbserial-0001 --device esp8266\n```\n\n_This value can be discovered using the [`scan`](./scan) command._\n","url":"/xs-dev/en/features/run","title":"Run","description":"Build and run Moddable projects or examples","layout":"../../../layouts/MainLayout.astro"},{"content":"\n# Discovery available devices\n\nThis command will use the [`esptool.py`](https://github.com/espressif/esptool) and/or [`picotool`](https://github.com/raspberrypi/picotool) command line tools to find available device targets connected over USB to the local dev environment.\n\n```\nxs-dev scan\n```\n\nThis will provide info with the port address, device name, and discovered features:\n\n```\nâœ” Found the following available devices!\n  Port                         Device                      Features\n  /dev/cu.usbserial-0001       ESP8266EX                   WiFi\n  /dev/cu.usbserial-DN02N5XK   ESP32-D0WDQ6 (revision 0)   WiFi, BT, Dual Core, Coding Scheme None\n```\n\nThe port can be used with the [`run`](./run) command to specify a device, if multiple are connected:\n\n```\nxs-dev run --port /dev/cu.usbserial-0001 --device esp8266\n```\n","url":"/xs-dev/en/features/scan","title":"Scan","description":"Discover connected device targets","layout":"../../../layouts/MainLayout.astro"},{"content":"\n# Moddable Platform Setup\n\nThis command downloads and builds the [Moddable developer tooling](https://github.com/Moddable-OpenSource/moddable/blob/public/documentation/tools/tools.md) for the current OS (Windows support coming soon).\n\n[After installing the CLI](/en/introduction#installation), call the `setup` command:\n\n```\nxs-dev setup\n```\n\nThis process mostly automates the instructions provided by [Moddable's \"Getting Started\" documentation](https://github.com/Moddable-OpenSource/moddable/blob/public/documentation/Moddable%20SDK%20-%20Getting%20Started.md) with a few exceptions.\n\n**On macOS:**\n\n[Homebrew](https://brew.sh/) is assumed to be installed.\n\nThe [Xcode Command Line tools](https://developer.apple.com/xcode/) are required; `setup` will check for their existence before continuing.\n\nA symlink for [`xsbug.app`](https://github.com/Moddable-OpenSource/moddable/blob/public/documentation/xs/xsbug.md) is created in `/Applications` for easy access through Launchpad.\n\n**On Unix environments:**\n\nThe [`moddable` git repo](https://github.com/Moddable-OpenSource/moddable) is cloned into `~/.local/share` instead of a new/existing `~/Projects` directory.\n\n## Device Setup\n\nWhile the `setup` command provides the Moddable SDK for the dev environment, the `--device` flag selects another platform target SDK to set up. It ensures the Moddable SDK has been installed first.\n\n```\nxs-dev setup --device esp32\n```\n\nUse the `--list-devices` flag to get a prompt for supported device tooling to install.\n\n```\nxs-dev setup --list-devices\n```\n\n## Additional related tooling\n\nThere are some utilities that are not included in the Moddable SDK or other platform tooling but can be helpful with some common development tasks. The `--tool` flag allows for installing one of these related tools, which may not be easily done from a typical package manager.\n\n**Supported tools:**\n\n[`fontbm`](https://github.com/vladimirgamalyan/fontbm): BMFont compatible, cross-platform (Linux/macOS/Windows) command line bitmap font generator (FreeType2 based render)\n\n```\nxs-dev setup --tool fontbm\n```\n","url":"/xs-dev/en/features/setup","title":"Setup","description":"xs-dev platform setup","layout":"../../../layouts/MainLayout.astro"},{"content":"\n# Clean up environment changes\n\nRemove all installed git repos and toolchains, unset environment changes. This is all or nothing currently; there's no filter for selecting an individual platform or device tooling.\n\n```\nxs-dev teardown\n```\n","url":"/xs-dev/en/features/teardown","title":"Teardown","description":"Clean up dev environment","layout":"../../../layouts/MainLayout.astro"},{"content":"\n# SDK & Tooling Updates\n\nStay up to date with the latest tooling from Moddable and supported device targets. As with the [`setup`](./setup) command, the current dev environment (Mac or Linux) is the default selected target:\n\n```\nxs-dev update\n```\n\nThe `--device` flag allows for selecting a different target platform:\n\n```\nxs-dev update --device esp32\n```\n\n_There may be some platforms that are supported by the `setup` command but not `update` yet._\n","url":"/xs-dev/en/features/update","title":"Update","description":"Stay up to date with the latest tooling","layout":"../../../layouts/MainLayout.astro"}]